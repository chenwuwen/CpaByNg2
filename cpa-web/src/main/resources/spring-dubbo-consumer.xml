<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <description>dubbo服务消费者配置</description>
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <!--当一个项目中配置多个dubbo时会报错： Invocation of init method failed; nested exception is java.lang.IllegalStateException: Duplicate application configs:-->
    <!--大意时配置文件重复,解决办法：1是可以把消费者提供者的配置文件整合成一个文件，2是在一个配置文件中添加default="false"-->
    <dubbo:application default="false" name="cn.kanyun.cpa" owner="kanyun" organization="dubbox"/>
    <!--向 zookeeper 订阅 provider 的地址，由 zookeeper 定时推送-->
    <dubbo:registry address="zookeeper://115.47.155.3:2181"/>
    <!--使用 dubbo 协议调用定义好的 api.PermissionService 接口-->
    <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
    <!--mock:当远程服务不可用是,可以配置mock属性来进行服务降级,可以具体查询mock支持的几种类型-->
    <dubbo:reference id="testService" interface="com.ruifight.oa.service.TestService" check="false" mock="return null"/>

    <!--开启Dubbo消费者注解方式,来避免上面一条配置,当需要注入service时,需要添加@Reference注解,而非@Resource @AutoWrite注解,需要注意的是,需要将该文件导入到spring-mvc.xml配置文件中,否则注入服务可能为Null-->
    <dubbo:annotation package="cn.kanyun.cpa.service" />

    <!-- 服务者与消费者的默认配置 -->
    <!-- 延迟到Spring初始化完成后，再暴露服务,服务调用超时设置为6秒,超时不重试   -->
    <!--<dubbo:provider delay="-1" timeout="6000" retries="0"/>-->
    <dubbo:consumer timeout="6000" retries="0"/>
</beans>